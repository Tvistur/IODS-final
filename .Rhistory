sort(table(simple$adverb), decreasing = TRUE)[1:5]
# Chunk 6: D to F
gender <- ggplot(adverbs, aes(x = gender)) +
geom_bar(fill = "skyblue") +
labs(x = "D. Gender", y = "Frequency")
year <- ggplot(adverbs, aes(x = year)) +
geom_density(fill = "skyblue") +
labs(x = "E. Year", y = "Frequency")
grid.arrange(gender, year, ncol = 2, top = "Distributions of variables D-E")
# Chunk 7
summary(adverbs$year)
# Chunk 8
men <- adverbs %>% filter(gender == "male")
women <- adverbs%>% filter(gender == "female")
role_class_m <- men %>%
ggplot(aes(x = role)) +
geom_bar(aes(fill = class), position = "dodge") +
labs(x = "Role", y = "Frequency") +
ggtitle("Men")
role_class_f <- women %>%
ggplot(aes(x = role)) +
geom_bar(aes(fill = class), position = "dodge") +
labs(x = "Role", y = "Frequency") +
ggtitle("Women")
grid.arrange(role_class_m, role_class_f, ncol = 2, top = "Distributions of role and class for men and women")
# Chunk 9
ggplot(data = adverbs, aes(x = gender)) +
geom_bar(aes(fill = adverb_type), position = "fill") +
scale_y_continuous(labels = percent) +
labs(x = "Gender", y = "Percentage", title = "Distributions of intensifying adverbs for men and women (%)")
# Chunk 10
t <- table(adverbs$adverb_type, adverbs$class)
table(adverbs$adverb_type, adverbs$class) %>% +
prop.table(2)
# Chunk 11
chisq.test(t)
# Chunk 12: levels
adverbs$adverb_type <- factor(adverbs$adverb_type, levels = c("simple", "derived"))
# Chunk 13: logistic regression model 1
model <- glm(adverb_type ~  gender + year + class + role, data = adverbs, family = "binomial")
summary(model)
# Chunk 14
OR <- coef(model) %>% exp
CI <- confint(model) %>% exp
cbind(OR, CI)
# Chunk 15: all effects
plot(allEffects(model))
# Chunk 16
# predict probability
probabilities <- predict(model, type = "response")
# add predicted probabilities to data set
adverbs <- mutate(adverbs, probability = probabilities)
# add predictions to data set
adverbs <-  mutate(adverbs, prediction = probability > 0.05)
# create table of target variable vs predictions
table(adverb = adverbs$adverb_type, prediction = adverbs$prediction) %>%
prop.table()
# draw plot of target variables vs predictions
ggplot(adverbs, aes(x = probability, y = adverb_type, col = prediction)) +
geom_point(aes(col = prediction)) +
labs(x = "Probability", y = "Type of adverb", title = "Predictions for intensifying adverbs (probability > 0.05)")
# Chunk 17: cross validation
# loss function
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
# 10-fold cross-validation
cv <- cv.glm(data = adverbs, cost = loss_func, glmfit = model, K = 10)
cv$delta[1]
mca <- MCA(adverbs, graph = FALSE)
library(FactoMineR)
mca <- MCA(adverbs, graph = FALSE)
summary(mca)
mca <- MCA(adverbs, graph = FALSE)
colnames(adverbs)
keep <- c("adverb_type", "year", "gender", "class", "role")
not_parts <- dplyr::select(adverbs, one_of(keep))
mca <- MCA(not_parts, graph = FALSE)
summary(mca)
str(not_parts)
not_parts$year <- factor(not_parts$year)
mca <- MCA(not_parts, graph = FALSE)
summary(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
plot(mca, invisible=c("ind"), habillage = "quali")
View(adverbs)
not_parts_scaled <- scale(not_parts)
adverbs_mca <- dplyr::select(adverbs, one_of(keep))
adverbs_mca_scaled <- scale(adverbs_mca)
knitr::opts_chunk$set(
tidy = FALSE,
size = "small",
out.width = "70%",
fig.align = "center",
fig.width = 6,
fig.asp = 0.618,
fig.show = "hold",
fig.path = "../figures/document/",
cache.path = "../cache/document/",
cache = TRUE,
par = TRUE,
collapse = TRUE,
message = FALSE,
warning = FALSE
)
options(digits = 3)
options(table_counter = TRUE)
library(dplyr)
library(plyr)
library(lme4)
library(vcd)
library(tidyverse)
library(readr)
library(scales)
library(rms)
library(broom)
library(pander)
library(gridExtra)
library(GGally)
library(effects)
library(knitcitations)
library(stats)
library(htmlTable)
library(MASS)
library(ggplot2)
library(boot)
library(FactoMineR)
adverbs <- read.csv("data/adverbs.csv", sep = ",", header = TRUE, na.strings = c("", "NA"))
adv <- ggplot(adverbs, aes(x = adverb_type)) +
geom_bar(fill = "skyblue") +
labs(x = "A. Type of adverb", y = "Frequency")
class <- ggplot(adverbs, aes(x = class)) +
geom_bar(fill = "skyblue") +
labs(x = "B. Social class", y = "Frequency")
role <- ggplot(adverbs, aes(x = role)) +
geom_bar(fill = "skyblue") +
labs(x = "D. Role in courtroom", y = "Frequency")
grid.arrange(adv, class, role, ncol = 3, top = "Distributions of variables A-C")
# only derived intensifiers
derived <- adverbs %>% filter(adverb_type == "derived")
# only simple intensifiers
simple <- adverbs %>% filter(adverb_type == "simple")
# top 5 derived adverbs
sort(table(derived$adverb), decreasing = TRUE)[1:5]
# top 5 simple adverbs
sort(table(simple$adverb), decreasing = TRUE)[1:5]
gender <- ggplot(adverbs, aes(x = gender)) +
geom_bar(fill = "skyblue") +
labs(x = "D. Gender", y = "Frequency")
year <- ggplot(adverbs, aes(x = year)) +
geom_density(fill = "skyblue") +
labs(x = "E. Year", y = "Frequency")
grid.arrange(gender, year, ncol = 2, top = "Distributions of variables D-E")
summary(adverbs$year)
# only men
men <- adverbs %>% filter(gender == "male")
# only women
women <- adverbs%>% filter(gender == "female")
role_class_m <- men %>%
ggplot(aes(x = role)) +
geom_bar(aes(fill = class), position = "dodge") +
labs(x = "Role", y = "Frequency") +
ggtitle("Men")
role_class_f <- women %>%
ggplot(aes(x = role)) +
geom_bar(aes(fill = class), position = "dodge") +
labs(x = "Role", y = "Frequency") +
ggtitle("Women")
grid.arrange(role_class_m, role_class_f, ncol = 2, top = "Distributions of role and class for men and women")
ggplot(data = adverbs, aes(x = gender)) +
geom_bar(aes(fill = adverb_type), position = "fill") +
scale_y_continuous(labels = percent) +
labs(x = "Gender", y = "Percentage", title = "Distributions of intensifying adverbs for men and women (%)")
# create cross-tabulation for chi-square test
t <- table(adverbs$adverb_type, adverbs$class)
# print table
table(adverbs$adverb_type, adverbs$class) %>% +
prop.table(2)
# chi-square test
chisq.test(t)
# reorder levels of adverb type
adverbs$adverb_type <- factor(adverbs$adverb_type, levels = c("simple", "derived"))
# create model
model <- glm(adverb_type ~  gender + year + class + role, data = adverbs, family = "binomial")
# print summary of model
summary(model)
# calculate odds ratios (OR)
OR <- coef(model) %>% exp
# calculate confidence intesvals (CI)
CI <- confint(model) %>% exp
# print OR and CI
cbind(OR, CI)
# visualize effects of variables
plot(allEffects(model))
# predict probability
probabilities <- predict(model, type = "response")
# add predicted probabilities to data set
adverbs <- mutate(adverbs, probability = probabilities)
# add predictions to data set
adverbs <-  mutate(adverbs, prediction = probability > 0.05)
# create table of target variable vs predictions
table(adverb = adverbs$adverb_type, prediction = adverbs$prediction) %>%
prop.table()
# draw plot of target variables vs predictions
ggplot(adverbs, aes(x = probability, y = adverb_type, col = prediction)) +
geom_point(aes(col = prediction)) +
labs(x = "Probability", y = "Type of adverb", title = "Predictions for intensifying adverbs (probability > 0.05)")
# loss function
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
# 10-fold cross-validation
cv <- cv.glm(data = adverbs, cost = loss_func, glmfit = model, K = 10)
cv$delta[1]
adverbs_mca_scaled <- scale(adverbs_mca[c('adverb_type','year', 'gender', 'class', 'role')])
keep <- c("adverb_type", "year", "gender", "class", "role")
adverbs_mca <- dplyr::select(adverbs, one_of(keep))
adverbs_mca_scaled <- scale(adverbs_mca[c('adverb_type','year', 'gender', 'class', 'role')])
adverbs_mca_scaled <- scale(adverbs_mca[c('year', 'adverb_type', 'gender', 'class', 'role')])
adverbs_mca_scaled <- scale(adverbs_mca[c("year", "adverb_type", "gender", "class", "role")])
adverbs_mca_scaled <- as.data.frame(apply(adverbs_mca[c("year", "adverb_type", "gender", "class", "role")], scale))
adverbs_mca_scaled <- as.data.frame(sapply(adverbs_mca[c("year", "adverb_type", "gender", "class", "role")], scale))
View(adverbs_mca)
View(adverbs_mca)
adverbs_scaled <- scale(adverbs)
adverbs$year <- scale(adverbs$year)
adverbs_mca <- dplyr::select(adverbs, one_of(keep))
mca <- MCA(adverbs_mca, graph = FALSE)
keep <- c("adverb_type", "year", "gender", "class", "role")
adverbs_mca <- dplyr::select(adverbs, one_of(keep))
mca <- MCA(adverbs_mca, graph = FALSE)
summary(mca)
adverbs_mca$year <- factor(adverbs_mca$year)
mca <- MCA(adverbs_mca, graph = FALSE)
summary(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
# Chunk 1: setup
knitr::opts_chunk$set(
tidy = FALSE,
size = "small",
out.width = "70%",
fig.align = "center",
fig.width = 6,
fig.asp = 0.618,
fig.show = "hold",
fig.path = "../figures/document/",
cache.path = "../cache/document/",
cache = TRUE,
par = TRUE,
collapse = TRUE,
message = FALSE,
warning = FALSE
)
options(digits = 3)
options(table_counter = TRUE)
# Chunk 2: library calls
library(dplyr)
library(plyr)
library(lme4)
library(vcd)
library(tidyverse)
library(readr)
library(scales)
library(rms)
library(broom)
library(pander)
library(gridExtra)
library(GGally)
library(effects)
library(knitcitations)
library(stats)
library(htmlTable)
library(MASS)
library(ggplot2)
library(boot)
library(FactoMineR)
# Chunk 3: import data
adverbs <- read.csv("data/adverbs.csv", sep = ",", header = TRUE, na.strings = c("", "NA"))
# Chunk 4: A to C
adv <- ggplot(adverbs, aes(x = adverb_type)) +
geom_bar(fill = "skyblue") +
labs(x = "A. Type of adverb", y = "Frequency")
class <- ggplot(adverbs, aes(x = class)) +
geom_bar(fill = "skyblue") +
labs(x = "B. Social class", y = "Frequency")
role <- ggplot(adverbs, aes(x = role)) +
geom_bar(fill = "skyblue") +
labs(x = "D. Role in courtroom", y = "Frequency")
grid.arrange(adv, class, role, ncol = 3, top = "Distributions of variables A-C")
# Chunk 5: most frequent types of adverbs
# only derived intensifiers
derived <- adverbs %>% filter(adverb_type == "derived")
# only simple intensifiers
simple <- adverbs %>% filter(adverb_type == "simple")
# top 5 derived adverbs
sort(table(derived$adverb), decreasing = TRUE)[1:5]
# top 5 simple adverbs
sort(table(simple$adverb), decreasing = TRUE)[1:5]
# Chunk 6: D to F
gender <- ggplot(adverbs, aes(x = gender)) +
geom_bar(fill = "skyblue") +
labs(x = "D. Gender", y = "Frequency")
year <- ggplot(adverbs, aes(x = year)) +
geom_density(fill = "skyblue") +
labs(x = "E. Year", y = "Frequency")
grid.arrange(gender, year, ncol = 2, top = "Distributions of variables D-E")
# Chunk 7
summary(adverbs$year)
# Chunk 8
# only men
men <- adverbs %>% filter(gender == "male")
# only women
women <- adverbs%>% filter(gender == "female")
role_class_m <- men %>%
ggplot(aes(x = role)) +
geom_bar(aes(fill = class), position = "dodge") +
labs(x = "Role", y = "Frequency") +
ggtitle("Men")
role_class_f <- women %>%
ggplot(aes(x = role)) +
geom_bar(aes(fill = class), position = "dodge") +
labs(x = "Role", y = "Frequency") +
ggtitle("Women")
grid.arrange(role_class_m, role_class_f, ncol = 2, top = "Distributions of role and class for men and women")
# Chunk 9
ggplot(data = adverbs, aes(x = gender)) +
geom_bar(aes(fill = adverb_type), position = "fill") +
scale_y_continuous(labels = percent) +
labs(x = "Gender", y = "Percentage", title = "Distributions of intensifying adverbs for men and women (%)")
# Chunk 10
# create cross-tabulation for chi-square test
t <- table(adverbs$adverb_type, adverbs$class)
# print table
table(adverbs$adverb_type, adverbs$class) %>% +
prop.table(2)
# Chunk 11
# chi-square test
chisq.test(t)
# Chunk 12: levels
# reorder levels of adverb type
adverbs$adverb_type <- factor(adverbs$adverb_type, levels = c("simple", "derived"))
# Chunk 13: logistic regression model 1
# create model
model <- glm(adverb_type ~  gender + year + class + role, data = adverbs, family = "binomial")
# print summary of model
summary(model)
# Chunk 14
# calculate odds ratios (OR)
OR <- coef(model) %>% exp
# calculate confidence intesvals (CI)
CI <- confint(model) %>% exp
# print OR and CI
cbind(OR, CI)
# Chunk 15: all effects
# visualize effects of variables
plot(allEffects(model))
# Chunk 16
# predict probability
probabilities <- predict(model, type = "response")
# add predicted probabilities to data set
adverbs <- mutate(adverbs, probability = probabilities)
# add predictions to data set
adverbs <-  mutate(adverbs, prediction = probability > 0.05)
# create table of target variable vs predictions
table(adverb = adverbs$adverb_type, prediction = adverbs$prediction) %>%
prop.table()
# draw plot of target variables vs predictions
ggplot(adverbs, aes(x = probability, y = adverb_type, col = prediction)) +
geom_point(aes(col = prediction)) +
labs(x = "Probability", y = "Type of adverb", title = "Predictions for intensifying adverbs (probability > 0.05)")
# Chunk 17: cross validation
# loss function
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
# 10-fold cross-validation
cv <- cv.glm(data = adverbs, cost = loss_func, glmfit = model, K = 10)
cv$delta[1]
# Chunk 18
# select columns for MCA (same ones as in glm)
keep <- c("adverb_type", "year", "gender", "class", "role")
# create new data frame with selected columns
adverbs_mca <- dplyr::select(adverbs, one_of(keep))
# convert year to factor
adverbs_mca$year <- factor(adverbs_mca$year)
# Chunk 19
# create MCA model
mca <- MCA(adverbs_mca, graph = FALSE)
# print summary of MCA model
summary(mca)
# Chunk 20
# visualize MCA
plot(mca, invisible=c("ind"), habillage = "quali")
library(factoextra)
fviz_screeplot(mca)
fviz_screeplot(mca) +
geom_hline(yintercept = 33.33, linetype = 2, color = "red")
fviz_screeplot(mca) +
geom_hline(yintercept = 5, linetype = 2, color = "red")
fviz_screeplot(mca)
fviz_ca_biplot(mca)
plot(mca, invisible=c("col"), habillage = "quali")
library(corrplot)
summary(mca)
head(row$contrib)
fviz_contrib(mca, choice = "row", axes = 1)
factoextra::fviz_contrib(mca, choice = "row", axes = 1)
fviz_contrib(mca, choice = "row", axes = 1:2)
fviz_ca_row(mca, col.row = "contrib")
factoextra::fviz_ca_row(mca, col.row = "contrib")
fviz_screeplot(mca)
corrplot(row$cos2, is.corr = FALSE)
# visualize MCA
plot(mca, invisible="row", habillage = "quali")
fviz_ca_biplot(mca)
# visualize MCA
plot(mca, invisible="c("col")", habillage = "quali")
fviz_ca_biplot(mca)
# visualize MCA
plot(mca, invisible=c("col"), habillage = "quali")
fviz_ca_biplot(mca)
fviz_ca_biplot(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
plot(mca, invisible=c("ind"), habillage = "quali", cex = 0.5)
# visualize MCA
plot(mca, invisible=c("ind"), habillage = "quali", cex = 2)
fviz_ca_biplot(mca)
# visualize MCA
plot(mca, invisible=c("ind"), habillage = "quali", cex = 0.8)
fviz_ca_biplot(mca)
# visualize MCA
plot(mca, invisible=c("ind"), habillage = "quali", cex = 0.7)
fviz_ca_biplot(mca)
fviz_screeplot(mca)
# predict probability
probabilities <- predict(model, type = "response")
# add predicted probabilities to data set
adverbs <- mutate(adverbs, probability = probabilities)
# add predictions to data set
adverbs <-  mutate(adverbs, prediction = probability > 0.05)
# create table of target variable vs predictions
table(adverb = adverbs$adverb_type, prediction = adverbs$prediction) %>%
prop.table()
# draw plot of target variables vs predictions
ggplot(adverbs, aes(x = probability, y = adverb_type, col = prediction)) +
geom_point(aes(col = prediction)) +
labs(x = "Probability", y = "Type of adverb", title = "Predictions for intensifying adverbs (probability > 0.05)")
# loss function
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
# 10-fold cross-validation
cv <- cv.glm(data = adverbs, cost = loss_func, glmfit = model, K = 10)
cv$delta[1]
summary(mca)
fviz_screeplot(mca)
# visualize MCA
plot(mca, invisible=c("ind"), habillage = "quali", cex = 0.5)
, fig
?plot
# visualize MCA
plot(mca, invisible=c("ind"), habillage = "quali", cex = 0.5)
# visualize MCA
plot(mca, invisible=c("ind"), habillage = "quali", cex = 0.5, xlim = 0.5)
# visualize MCA
plot(mca, invisible=c("ind"), habillage = "quali", cex = 0.5, xlim = 1:5)
# visualize MCA
plot(mca, invisible=c("ind"), habillage = "quali", cex = 0.5, xlim = c(1,5)
# visualize MCA
plot(mca, invisible=c("ind"), habillage = "quali", cex = 0.5, xlim = c(1,5))
# visualize MCA
plot(mca, invisible=c("ind"), habillage = "quali", cex = 0.5)
# visualize MCA
plot(mca, invisible=c("ind"), habillage = "quali", cex = 0.5, xlim = range(-5:5))
# visualize MCA
plot(mca, invisible=c("ind"), habillage = "quali", cex = 0.5, xlim = range(-2:2))
# visualize MCA
plot(mca, invisible=c("ind"), habillage = "quali", cex = 0.5, xlim = c(xmin, xmax), ylim = c(ymin, ymax))
# visualize MCA
plot(mca, invisible=c("ind", "quali.supp"), habillage = "quali")
# visualize MCA
plot(mca, invisible=c("ind", "quali.supp"), habillage = "quali", cex = 0.8)
# visualize MCA
plot(mca, invisible=c("ind", "quali.supp"), habillage = "quali", cex = 0.8, selectMod = "contrib 20")
# visualize MCA
plot(mca, invisible=c("ind", "quali.supp"), habillage = "quali", cex = 0.8, selectMod = "contrib 30")
# visualize MCA
plot(mca, invisible=c("ind", "quali.supp"), habillage = "quali", cex = 0.8, selectMod = "contrib 50")
# visualize MCA
plot(mca, invisible=c("ind", "quali.supp"), habillage = "quali", cex = 0.8, selectMod = "contrib 30")
plot(mca, invisible=c("ind", "quali.supp"), habillage = "quali", cex = 0.8, selectMod = "cos2 20")
plot(mca, invisible=c("ind", "quali.supp"), habillage = "quali", cex = 0.8, selectMod = "cos2 30")
plot(mca, invisible=c("ind"), habillage = "quali", cex = 0.8, selectMod = "cos2 30")
plot(mca, invisible=c("ind"), habillage = "quali", cex = 0.8, selectMod = "cos2 30", xlim = c(0, 0.5), ylim = c(0, 0.5))
plot(mca, invisible=c("ind"), habillage = "quali", cex = 0.8, selectMod = "cos2 30", xlim = c(-3, 3))
plot(mca, invisible=c("ind"), habillage = "quali", cex = 0.8, selectMod = "cos2 30")
plot(mca, invisible=c("ind", "quali.supp"), habillage = "quali", cex = 0.8, selectMod = "cos2 30")
plot(mca, invisible=c("ind"), habillage = "frequency", cex = 0.8, selectMod = "cos2 30")
DIM.1: role, class!, year
# visualize MCA (top 30 categories that are best represented on the 2 dimensions)
plot(mca, invisible=c("ind"), habillage = "quali", cex = 0.9, selectMod = "cos2 30")
# visualize MCA (top 30 categories that are best represented on the 2 dimensions)
plot(mca, invisible=c("ind"), habillage = "quali", selectMod = "cos2 30")
fviz_screeplot(mca, color = "skyblue")
fviz_screeplot(mca, color = "pink")
?fviz_screeplot
fviz_screeplot(mca, barfill = "pink")
fviz_screeplot(mca, barfill = "skyblue")
