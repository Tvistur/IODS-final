size = "small",
out.width = "70%",
fig.align = "center",
fig.width = 6,
fig.asp = 0.618,
fig.show = "hold",
fig.path = "../figures/document/",
cache.path = "../cache/document/",
cache = TRUE,
par = TRUE,
collapse = TRUE,
message = FALSE,
warning = FALSE
)
options(digits = 3)
options(table_counter = TRUE)
library(dplyr)
library(plyr)
library(lme4)
library(vcd)
library(tidyverse)
library(readr)
library(scales)
library(rms)
library(broom)
library(pander)
library(gridExtra)
library(GGally)
library(effects)
library(knitcitations)
library(stats)
library(htmlTable)
library(MASS)
adverbs <- read.csv("data/adverbs.csv", sep = ",", header = TRUE, na.strings = c("", "NA"))
adv <- ggplot(adverbs, aes(x = adverb_type)) +
geom_bar(position = "dodge", stat = "identity", color = "black", fill = "skyblue") +
labs(x = "A. Type of adverb", y = "Frequency")
class <- ggplot(adverbs, aes(x = class)) +
geom_bar(position = "dodge", stat = "identity", color = "black", fill = "skyblue") +
labs(x = "B. Social class", y = "Frequency")
role <- ggplot(adverbs, aes(x = role)) +
geom_bar(position = "dodge", stat = "identity", color = "black", fill = "skyblue") +
labs(x = "D. Role in courtroom", y = "Frequency")
grid.arrange(adv, class, role, ncol = 3, top = "Figure 1: Distributions of variables A-C")
ggplot(adverbs, aes(x = adverb_type)) +
geom_bar(position = "dodge", stat = "identity", color = "black", fill = "skyblue")
ggplot(adverbs, aes(x = adverb_type)) +
geom_bar(position = "dodge", stat = "identity", color = "black", fill = "skyblue") +
labs(x = "A. Type of adverb", y = "Frequency")
ggplot(adverbs, aes(x = adverb_type)) +
geom_bar()
ggplot(adverbs, aes(x = adverb_type)) +
geom_bar(fill = "skyblue")
ggplot(adverbs, aes(x = adverb_type)) +
geom_bar(color = "black"", fill = "skyblue")
library(ggplot2)
ggplot(adverbs, aes(x = adverb_type)) +
geom_bar()
ggplot(adverbs, aes(x = adverb_type)) +
geom_bar(fill = "skyblue")
ggplot(adverbs, aes(x = adverb_type)) +
geom_bar(fill = "skyblue") +
labs(x = "A. Type of adverb", y = "Frequency")
adv <- ggplot(adverbs, aes(x = adverb_type)) +
geom_bar(fill = "skyblue") +
labs(x = "A. Type of adverb", y = "Frequency")
class <- ggplot(adverbs, aes(x = class)) +
geom_bar(fill = "skyblue") +
labs(x = "B. Social class", y = "Frequency")
role <- ggplot(adverbs, aes(x = role)) +
geom_bar(fill = "skyblue") +
labs(x = "D. Role in courtroom", y = "Frequency")
grid.arrange(adv, class, role, ncol = 3, top = "Figure 1: Distributions of variables A-C")
levels(adverbs$adverb_type)
derived <- adverbs %>% filter(adverb_type == "derived")
simple <- adverbs %>% filter(adverb_type == "simple")
# top 5 derived adverbs
sort(table(derived$adverb), decreasing = TRUE)[1:5]
# top 5 simple adverbs
sort(table(simple$adverb), decreasing = TRUE)[1:5]
gender <- ggplot(adverbs, aes(x = gender)) +
geom_bar(fill = "skyblue") +
labs(x = "D. Gender", y = "Frequency")
year <- ggplot(adverbs, aes(x = year)) +
geom_density(fill = "skyblue") +
labs(x = "E. Year", y = "Frequency")
grid.arrange(gender, year, ncol = 2, top = "Figure 2: Distributions of variables D-E")
gender <- ggplot(adverbs, aes(x = gender)) +
geom_bar(fill = "skyblue") +
labs(x = "D. Gender", y = "Frequency")
year <- ggplot(adverbs, aes(x = year)) +
geom_density(fill = "skyblue", alpha = 0.5) +
labs(x = "E. Year", y = "Frequency")
grid.arrange(gender, year, ncol = 2, top = "Figure 2: Distributions of variables D-E")
gender <- ggplot(adverbs, aes(x = gender)) +
geom_bar(fill = "skyblue") +
labs(x = "D. Gender", y = "Frequency")
year <- ggplot(adverbs, aes(x = year)) +
geom_density(fill = "skyblue", alpha = 0.6) +
labs(x = "E. Year", y = "Frequency")
grid.arrange(gender, year, ncol = 2, top = "Figure 2: Distributions of variables D-E")
gender <- ggplot(adverbs, aes(x = gender)) +
geom_bar(fill = "skyblue") +
labs(x = "D. Gender", y = "Frequency")
year <- ggplot(adverbs, aes(x = year)) +
geom_density(fill = "skyblue", alpha = 0.8) +
labs(x = "E. Year", y = "Frequency")
grid.arrange(gender, year, ncol = 2, top = "Figure 2: Distributions of variables D-E")
levels(adverbs$adverb_type)
getwd()
knitr::opts_chunk$set(
tidy = FALSE,
size = "small",
out.width = "70%",
fig.align = "center",
fig.width = 6,
fig.asp = 0.618,
fig.show = "hold",
fig.path = "../figures/document/",
cache.path = "../cache/document/",
cache = TRUE,
par = TRUE,
collapse = TRUE,
message = FALSE,
warning = FALSE
)
options(digits = 3)
options(table_counter = TRUE)
library(dplyr)
library(plyr)
library(lme4)
library(vcd)
library(tidyverse)
library(readr)
library(scales)
library(rms)
library(broom)
library(pander)
library(gridExtra)
library(GGally)
library(effects)
library(knitcitations)
library(stats)
library(htmlTable)
library(MASS)
library(ggplot2)
adverbs <- read.csv("data/adverbs.csv", sep = ",", header = TRUE, na.strings = c("", "NA"))
levels(adverbs$adverb_type)
adverbs$adverb_type <- factor(adverbs$adverb_type, levels = c("simple", "derived"))
levels(adverbs$adverb_type)
adv <- ggplot(adverbs, aes(x = adverb_type)) +
geom_bar(fill = "skyblue") +
labs(x = "A. Type of adverb", y = "Frequency")
class <- ggplot(adverbs, aes(x = class)) +
geom_bar(fill = "skyblue") +
labs(x = "B. Social class", y = "Frequency")
role <- ggplot(adverbs, aes(x = role)) +
geom_bar(fill = "skyblue") +
labs(x = "D. Role in courtroom", y = "Frequency")
grid.arrange(adv, class, role, ncol = 3, top = "Figure 1: Distributions of variables A-C")
derived <- adverbs %>% filter(adverb_type == "derived")
simple <- adverbs %>% filter(adverb_type == "simple")
# top 5 derived adverbs
sort(table(derived$adverb), decreasing = TRUE)[1:5]
# top 5 simple adverbs
sort(table(simple$adverb), decreasing = TRUE)[1:5]
gender <- ggplot(adverbs, aes(x = gender)) +
geom_bar(fill = "skyblue") +
labs(x = "D. Gender", y = "Frequency")
year <- ggplot(adverbs, aes(x = year)) +
geom_density(fill = "skyblue") +
labs(x = "E. Year", y = "Frequency")
grid.arrange(gender, year, ncol = 2, top = "Figure 2: Distributions of variables D-E")
summary(adverbs$year)
men <- adverbs %>% filter(gender == "male")
women <- adverbs%>% filter(gender == "female")
role_class_m <- men %>%
ggplot(aes(x = role)) +
geom_bar(aes(fill = class), position = "dodge") +
labs(x = "Role", y = "Frequency") +
ggtitle("Men")
role_class_f <- women %>%
ggplot(aes(x = role)) +
geom_bar(aes(fill = class), position = "dodge") +
labs(x = "Role", y = "Frequency") +
ggtitle("Women")
grid.arrange(role_class_m, role_class_f, ncol = 2, top = "Figure 3: Distributions of role and class for men and women")
ggplot(data = adverbs, aes(x = gender)) +
geom_bar(aes(fill = adverb_type), position = "fill") +
scale_y_continuous(labels = percent) +
labs(x = "Gender", y = "Percentage", title = "Figure 4: Distributions of intensifying adverbs for men and women (%)")
t <- table(adverbs$adverb_type, adverbs$class)
table(adverbs$adverb_type, adverbs$class) %>% +
prop.table(2)
chisq.test(t)
model <- glm(adverb_type ~  gender + year + class + role, data = adverbs, family = "binomial")
summary(model)
plot(allEffects(model))
OR <- coef(model) %>% exp
CI <- confint(model) %>% exp
cbind(OR, CI)
probabilities <- predict(model, type = "response")
adverbs_glm <- mutate(adverbs, probability = probabilities)
adverbs_glm <-  mutate(adverbs_glm, prediction = probability > 0.85)
table(adverb = adverbs_glm$adverb_type, prediction = adverbs_glm$prediction) %>%
prop.table() %>%
addmargins()
ggplot(adverbs_glm, aes(x = probability, y = adverb_type, col = prediction)) +
geom_point() +
labs(x = "Probability", y = "Type of adverb", title = "Figure 5: Predictions for intensifying adverbs (probability > 0.85)")
probabilities <- predict(model, type = "response")
adverbs_glm <- mutate(adverbs, probability = probabilities)
adverbs_glm <-  mutate(adverbs_glm, prediction = probability > 0.85)
table(adverb = adverbs_glm$adverb_type, prediction = adverbs_glm$prediction) %>%
table(adverb = adverbs_glm$adverb_type, prediction = adverbs_glm$prediction) %>%
prop.table() %>%
addmargins()
table(adverb = adverbs_glm$adverb_type, prediction = adverbs_glm$prediction) %>%
prop.table()
table(adverb = adverbs_glm$adverb_type, prediction = adverbs_glm$prediction) %>%
prop.table() %>%
addmargins()
adverbs_glm <-  mutate(adverbs_glm, prediction = probability > 0.5)
ggplot(adverbs_glm, aes(x = probability, y = adverb_type, col = prediction)) +
geom_point() +
labs(x = "Probability", y = "Type of adverb", title = "Figure 5: Predictions for intensifying adverbs (probability > 0.85)")
adverbs_glm <-  mutate(adverbs_glm, prediction = probability > 0.85)
table(adverb = adverbs_glm$adverb_type, prediction = adverbs_glm$prediction) %>%
prop.table() %>%
addmargins()
ggplot(adverbs_glm, aes(x = probability, y = adverb_type, col = prediction)) +
geom_point() +
labs(x = "Probability", y = "Type of adverb", title = "Figure 5: Predictions for intensifying adverbs (probability > 0.85)")
adverbs_glm <-  mutate(adverbs_glm, prediction = probability > 0.9)
table(adverb = adverbs_glm$adverb_type, prediction = adverbs_glm$prediction) %>%
prop.table() %>%
addmargins()
ggplot(adverbs_glm, aes(x = probability, y = adverb_type, col = prediction)) +
geom_point() +
labs(x = "Probability", y = "Type of adverb", title = "Figure 5: Predictions for intensifying adverbs (probability > 0.85)")
adverbs_glm <-  mutate(adverbs_glm, prediction = probability > 0.2)
table(adverb = adverbs_glm$adverb_type, prediction = adverbs_glm$prediction) %>%
prop.table() %>%
addmargins()
ggplot(adverbs_glm, aes(x = probability, y = adverb_type, col = prediction)) +
geom_point() +
labs(x = "Probability", y = "Type of adverb", title = "Figure 5: Predictions for intensifying adverbs (probability > 0.85)")
adverbs_glm <-  mutate(adverbs_glm, prediction = probability > 0.1)
table(adverb = adverbs_glm$adverb_type, prediction = adverbs_glm$prediction) %>%
prop.table() %>%
addmargins()
ggplot(adverbs_glm, aes(x = probability, y = adverb_type, col = prediction)) +
geom_point() +
labs(x = "Probability", y = "Type of adverb", title = "Figure 5: Predictions for intensifying adverbs (probability > 0.85)")
probabilities <- predict(model, type = "response")
adverbs_glm <- mutate(adverbs, probability = probabilities)
adverbs_glm <-  mutate(adverbs_glm, prediction = probability > 0.1)
table(adverb = adverbs_glm$adverb_type, prediction = adverbs_glm$prediction) %>%
prop.table() %>%
addmargins()
ggplot(adverbs_glm, aes(x = probability, y = adverb_type, col = prediction)) +
geom_point() +
labs(x = "Probability", y = "Type of adverb", title = "Figure 5: Predictions for intensifying adverbs (probability > 0.1)")
table(adverb = adverbs_glm$adverb_type, prediction = adverbs_glm$prediction)
table(adverb = adverbs_glm$adverb_type, prediction = adverbs_glm$prediction) %>%
prop.table()
table(adverb = adverbs_glm$adverb_type, prediction = adverbs_glm$prediction) %>%
prop.table() %>%
htmlTable(caption = "Speakers per age group, gender and class (dataset level)",
css.cell = "padding-left: 2em; padding-right: 2em;")
htmlTable(adverb = adverbs_glm$adverb_type, prediction = adverbs_glm$prediction) %>%
prop.table()
table(adverb = adverbs_glm$adverb_type, prediction = adverbs_glm$prediction) %>%
prop.table()
adverbs_glm <-  mutate(adverbs_glm, prediction = probability > 0.2)
table(adverb = adverbs_glm$adverb_type, prediction = adverbs_glm$prediction) %>%
prop.table()
adverbs_glm <-  mutate(adverbs_glm, prediction = probability > 0.1)
table(adverb = adverbs_glm$adverb_type, prediction = adverbs_glm$prediction) %>%
prop.table()
adverbs_glm <-  mutate(adverbs_glm, prediction = probability > 0.05)
table(adverb = adverbs_glm$adverb_type, prediction = adverbs_glm$prediction) %>%
prop.table()
probabilities <- predict(model, type = "response")
adverbs_glm <- mutate(adverbs, probability = probabilities)
adverbs_glm <-  mutate(adverbs_glm, prediction = probability > 0.05)
table(adverb = adverbs_glm$adverb_type, prediction = adverbs_glm$prediction) %>%
prop.table()
ggplot(adverbs_glm, aes(x = probability, y = adverb_type, col = prediction)) +
geom_point() +
labs(x = "Probability", y = "Type of adverb", title = "Figure 5: Predictions for intensifying adverbs (probability > 0.1)")
ggplot(adverbs_glm, aes(x = probability, y = adverb_type, col = prediction)) +
geom_point(aes(col = prediction)) +
labs(x = "Probability", y = "Type of adverb", title = "Figure 5: Predictions for intensifying adverbs (probability > 0.1)")
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = adverbs$adverb_type, prob = 0)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.05
mean(n_wrong)
}
loss_func(class = adverbs$adverb_type, prob = 0)
loss_func(class = adverbs$adverb_type, prob = 1)
loss_func(class = adverb_glms$adverb_type, prob = adverbs_glm$probability)
loss_func(class = adverbs_glm$adverb_type, prob = adverbs_glm$probability)
library(boot)
cv <- cv.glm(data = adverbs_glm, cost = loss_func, glmfit = m, K = 10)
loss_func(adverbs_glm$adverb_type, adverbs_glm$prediction)
cv <- cv.glm(data = adverbs_glm, cost = loss_func, glmfit = model, K = 10)
cv$delta[1]
loss_func(adverbs_glm$adverb_type, adverbs_glm$prediction)
cv <- cv.glm(data = adverbs_glm, cost = loss_func, glmfit = model, K = 100)
cv$delta[1]
cv <- cv.glm(data = adverbs_glm, cost = loss_func, glmfit = model, K = 100)
cv$delta[1]
cv$delta[1]
cv <- cv.glm(data = adverbs_glm, cost = loss_func, glmfit = model, K = 1000)
cv$delta[1]
cv$delta[1]
cv <- cv.glm(data = adverbs, cost = loss_func, glmfit = model, K = 10)
cv$delta[1]
adverbs <- mutate(adverbs, probability = probabilities)
adverbs <-  mutate(adverbs, prediction = probability > 0.05)
table(adverb = adverbs$adverb_type, prediction = adverbs$prediction) %>%
prop.table()
ggplot(adverbs, aes(x = probability, y = adverb_type, col = prediction)) +
geom_point(aes(col = prediction)) +
labs(x = "Probability", y = "Type of adverb", title = "Figure 5: Predictions for intensifying adverbs (probability > 0.1)")
ggplot(adverbs, aes(x = probability, y = adverb_type, col = prediction)) +
geom_point(aes(col = prediction)) +
labs(x = "Probability", y = "Type of adverb", title = "Figure 5: Predictions for intensifying adverbs (probability > 0.05)")
summary(model)
cv$delta[1]
# loss function
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
# 10-fold cross-validation
cv <- cv.glm(data = adverbs, cost = loss_func, glmfit = model, K = 10)
cv$delta[1]
setwd("~/Documents/IODS K17/IODS-final")
# Chunk 1: setup
knitr::opts_chunk$set(
tidy = FALSE,
size = "small",
out.width = "70%",
fig.align = "center",
fig.width = 6,
fig.asp = 0.618,
fig.show = "hold",
fig.path = "../figures/document/",
cache.path = "../cache/document/",
cache = TRUE,
par = TRUE,
collapse = TRUE,
message = FALSE,
warning = FALSE
)
options(digits = 3)
options(table_counter = TRUE)
# Chunk 2: library calls
library(dplyr)
library(plyr)
library(lme4)
library(vcd)
library(tidyverse)
library(readr)
library(scales)
library(rms)
library(broom)
library(pander)
library(gridExtra)
library(GGally)
library(effects)
library(knitcitations)
library(stats)
library(htmlTable)
library(MASS)
library(ggplot2)
library(boot)
# Chunk 3: import data
adverbs <- read.csv("data/adverbs.csv", sep = ",", header = TRUE, na.strings = c("", "NA"))
# Chunk 4: A to C
adv <- ggplot(adverbs, aes(x = adverb_type)) +
geom_bar(fill = "skyblue") +
labs(x = "A. Type of adverb", y = "Frequency")
class <- ggplot(adverbs, aes(x = class)) +
geom_bar(fill = "skyblue") +
labs(x = "B. Social class", y = "Frequency")
role <- ggplot(adverbs, aes(x = role)) +
geom_bar(fill = "skyblue") +
labs(x = "D. Role in courtroom", y = "Frequency")
grid.arrange(adv, class, role, ncol = 3, top = "Figure 1: Distributions of variables A-C")
# Chunk 5: most frequent types of adverbs
derived <- adverbs %>% filter(adverb_type == "derived")
simple <- adverbs %>% filter(adverb_type == "simple")
# top 5 derived adverbs
sort(table(derived$adverb), decreasing = TRUE)[1:5]
# top 5 simple adverbs
sort(table(simple$adverb), decreasing = TRUE)[1:5]
# Chunk 6: D to F
gender <- ggplot(adverbs, aes(x = gender)) +
geom_bar(fill = "skyblue") +
labs(x = "D. Gender", y = "Frequency")
year <- ggplot(adverbs, aes(x = year)) +
geom_density(fill = "skyblue") +
labs(x = "E. Year", y = "Frequency")
grid.arrange(gender, year, ncol = 2, top = "Figure 2: Distributions of variables D-E")
# Chunk 7
summary(adverbs$year)
# Chunk 8
men <- adverbs %>% filter(gender == "male")
women <- adverbs%>% filter(gender == "female")
role_class_m <- men %>%
ggplot(aes(x = role)) +
geom_bar(aes(fill = class), position = "dodge") +
labs(x = "Role", y = "Frequency") +
ggtitle("Men")
role_class_f <- women %>%
ggplot(aes(x = role)) +
geom_bar(aes(fill = class), position = "dodge") +
labs(x = "Role", y = "Frequency") +
ggtitle("Women")
grid.arrange(role_class_m, role_class_f, ncol = 2, top = "Figure 3: Distributions of role and class for men and women")
# Chunk 9
ggplot(data = adverbs, aes(x = gender)) +
geom_bar(aes(fill = adverb_type), position = "fill") +
scale_y_continuous(labels = percent) +
labs(x = "Gender", y = "Percentage", title = "Figure 4: Distributions of intensifying adverbs for men and women (%)")
# Chunk 10
t <- table(adverbs$adverb_type, adverbs$class)
table(adverbs$adverb_type, adverbs$class) %>% +
prop.table(2)
# Chunk 11
chisq.test(t)
# Chunk 12: levels
adverbs$adverb_type <- factor(adverbs$adverb_type, levels = c("simple", "derived"))
# Chunk 13: logistic regression model 1
model <- glm(adverb_type ~  gender + year + class + role, data = adverbs, family = "binomial")
summary(model)
# Chunk 14
OR <- coef(model) %>% exp
CI <- confint(model) %>% exp
cbind(OR, CI)
# Chunk 15: effects
plot(allEffects(model))
# Chunk 16
# predict probability
probabilities <- predict(model, type = "response")
# add predicted probabilities to data set
adverbs <- mutate(adverbs, probability = probabilities)
# add predictions to data set
adverbs <-  mutate(adverbs, prediction = probability > 0.05)
# create table of target variable vs predictions
table(adverb = adverbs$adverb_type, prediction = adverbs$prediction) %>%
prop.table()
# draw plot of target variables vs predictions
ggplot(adverbs, aes(x = probability, y = adverb_type, col = prediction)) +
geom_point(aes(col = prediction)) +
labs(x = "Probability", y = "Type of adverb", title = "Figure 5: Predictions for intensifying adverbs (probability > 0.05)")
# Chunk 17: cross validation
# loss function
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
# 10-fold cross-validation
cv <- cv.glm(data = adverbs, cost = loss_func, glmfit = model, K = 10)
cv$delta[1]
plot(allEffects(model), caption = "XXX")
plot(allEffects(model, caption = "XXX"))
plot(allEffects(model)) +
title(main = "XXX")
plot(allEffects(model)) %>%
title(main = "XXX")
plot(allEffects(model), title = "XXX")
plot(allEffects(model), title = "XXX")
plot(allEffects(model), title = "XXX")
plot(allEffects(model), title = "XXX")
plot(allEffects(model), title = "XXX")
plot(allEffects(model), title = "XXX")
plot(allEffects(model), title = "XXX")
plot(allEffects(model), title = "XXX")
plot(allEffects(model), title = "XXX")
plot(allEffects(model), title(main = "XXX")
plot(allEffects(model), caption = "") %>%
title(main = "XXX", cex.main = 0.5)
plot(allEffects(model), main =expression("XXX"))
plot(allEffects(model))
plot(allEffects(model, caption = "XXX"))
all <- plot(allEffects(model))
grid.arrows(ncol = 1, top "XXX")
grid.arrows(ncol = 1, top = "XXX")
grid.arrows(all, ncol = 1, top = "XXX")
plot(allEffects(model))
plot(allEffects(model))
title(main = "XXX")
plot(allEffects(model)) +
title(main = "XXX")
plot(allEffects(model)) %>%
title(main = "XXX")
plot(allEffects(model)) +
ggtitle("XXX")
plot(allEffects(model)) %>%
ggtitle("XXX")
plot(allEffects(model))
summary(model)
sort(table(derived$adverb), decreasing = TRUE)[1:5]
sort(table(simple$adverb), decreasing = TRUE)[1:5]
